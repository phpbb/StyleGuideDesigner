//------------------------------------------------------------------------------
// #generic: Type
//------------------------------------------------------------------------------
// #description:
//
//------------------------------------------------------------------------------

//
// #scss

//
// Remove top margins from headings
//
// By default, `<h1>`-`<h6>` all receive top and bottom margins. We nuked the
// top margin for easier control within type scales as it avoids margin
// collapsing.
//
h1,
h2,
h3,
h4,
h5,
h6 {
	@include vertical-rhythm();
}

//
// Reestablish margins on paragraphs
//
p {
	@include vertical-rhythm();
}

// Remove underlines from potentially troublesome elements.
u,
ins,
abbr[title] {
	text-decoration: none;
}

abbr[title] {
	border-bottom: $default-border-size dotted $default-gray;
}

// Apply faux underlines to inserted text via `border-bottom`.
ins {
	border-bottom: $default-border-size solid;
}

// Give a help cursor to elements that give extra info on `:hover`.
abbr[title],
dfn[title] {
	cursor: help;
}

address {
	@include vertical-rhythm();
	font-style: normal;
	line-height: inherit;
}

ol,
ul,
dd {
	@include vertical-rhythm();
	@include space(margin-left);
}

dl {
	@include vertical-rhythm();
}

li > ul,
li > ol {
	margin-bottom: 0;
}

nav ol,
nav ul {
	list-style: none;
}

nav > ol,
nav > ul {
	@include vertical-rhythm();
	padding: 0;
}

dt {
	font-weight: 700;
}

//
// 1. Hang the opening quote of the blockquote.
//
blockquote {
	@include vertical-rhythm();
	/* stylelint-disable unit-blacklist, declaration-property-unit-whitelist */
	text-indent: -0.41em; // [1]
	/* stylelint-enable unit-blacklist, declaration-property-unit-whitelist */
}

q {
	quotes: "‘" "’" "“" "”";

	&:before {
		content: "‘";
	}

	&:after {
		content: "’";
	}

	q:before {
		content: "“";
	}

	q:after {
		content: "”";
	}

	//
	// If an element opens with an inline quote, let’s hang that.
	//
	&:first-child {
		/* stylelint-disable unit-blacklist, declaration-property-unit-whitelist */
		text-indent: -0.22em;
		/* stylelint-enable unit-blacklist, declaration-property-unit-whitelist */
		display: inline-block;
	}
}
